
==================== FINAL INTERFACE ====================
2016-08-31 18:41:56.76002 UTC

interface main@main:Main 7103
  interface hash: b4faf2ccdbf716442e3de6dc12e97416
  ABI hash: 8757c66bf25936d4cdaea0e7d876da48
  export-list hash: 9942fe19efb064871b932d1d29e82cac
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9b47277d43009f8fab017447fd4a4b97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.argOp
  Main.main
  Main.regexPattern
module dependencies: Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0 bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.String c2d7fed27a27fee276c179af07290091
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Types 878e8b7ddc0fd354e3b8da7a94accdb2
  exports: f2e4d8a6118fd275c02a53a2302cb929
import  -/  regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix fa14a969e0d89af615bc3ee63c912f06
import  -/  regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Wrap c14dca50bea9909bd11f2fae9cef1d46
60042f8d6ffcff93d45e452f2d0d439c
  argOp :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ xs :: [GHC.Base.String] ->
                 case Main.argOp_go xs (GHC.Types.[] @ GHC.Types.Char) of wild {
                   [] -> GHC.List.init2 @ GHC.Types.Char
                   : x xs1 -> GHC.List.init1 @ GHC.Types.Char x xs1 }) -}
cb9a7f2db9df0af7aab64b40d385c377
  argOp_go ::
    [[GHC.Types.Char]] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
789bb0818144733eba7d6665a3952888
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
349525ba496d4a4eec9468331f26f1e0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.$fShow[]_$s$cshow2 ipv1)
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "--"#
                           (case Main.argOp_go ipv1 (GHC.Types.[] @ GHC.Types.Char) of wild {
                              [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                              : x xs
                              -> GHC.Base.++
                                   @ GHC.Types.Char
                                   (GHC.List.init1 @ GHC.Types.Char x xs)
                                   Main.main3 }))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Text.Regex.Posix.String.$fRegexLikeRegex[]_$cmatchTest
                           Main.main2
                           (Main.argOp ipv1) of wild {
                      GHC.Types.False -> GHC.Show.shows17
                      GHC.Types.True -> GHC.Show.shows16 })
                   GHC.Types.True
                   ipv4 } } }) -}
2acc107631149354cdc25e7d48d7c8fb
  main2 :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.NTCo:CInt[0]))
                        (Sym (Text.Regex.Posix.Wrap.NTCo:CompOption[0])))
                   Text.Regex.Posix.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.NTCo:CInt[0]))
                        (Sym (Text.Regex.Posix.Wrap.NTCo:ExecOption[0])))
                   Main.regexPattern) -}
24ee963686aec7de5a42ba1f9353c655
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "--"#) -}
82bbf15fc525e854dbe2e91ff3c889f1
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
8b83574a228cdaea0e020621187dc191
  regexPattern :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "[0-9]+(:)[A-Za-z0-9 ]+(:)[0-9]{1,2}/[0-9]{1,2}/[0-9]{2,4}"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

