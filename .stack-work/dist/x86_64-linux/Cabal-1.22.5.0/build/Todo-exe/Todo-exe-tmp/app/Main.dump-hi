
==================== FINAL INTERFACE ====================
2016-09-01 16:25:05.483499 UTC

interface main@main:Main 7103
  interface hash: 02a26b5c71804d06c144aff2fa0f0b4b
  ABI hash: f35b312a4258e769abafaa5fe5b65f83
  export-list hash: 5502c2f4a84dee2edcd1011433ec4ddf
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9b47277d43009f8fab017447fd4a4b97
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.addItem
  Main.argOp
  Main.main
  Main.mainThrow
  Main.printTodo
  Main.printTodoList
  Main.readMaybe
  Main.removeFromFile
  Main.removeItem
  Main.todoFile
  Main.viewTodoList
module dependencies: RegexPattern Types
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0 binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.String c2d7fed27a27fee276c179af07290091
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO.Handle 631f32e0ad65df940f6a2b3e721d8452
import  -/  base-4.8.2.0:GHC.IO.Handle.Text 06d2dc7704bcfe88a2157fd04748ace5
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  RegexPattern 080ea16126457466d02c0f0c0176c56c
  exports: 5ec278cf5d8c5b81f1a3bb1375ad5773
  patternToItem ecfd9b1438235b992c443bcc3d5b6add
  regexPattern e54a19db7cc458217170a2f08356418b
import  -/  Types 878e8b7ddc0fd354e3b8da7a94accdb2
  exports: f2e4d8a6118fd275c02a53a2302cb929
  displayItem 6d7c1468c644599b74c9c2e6b5bbdd12
import  -/  process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ:System.Process 8f5da958699421ce933a2006dea644fe
import  -/  process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ:System.Process.Internals 5dd6e64eed697f7aa82070fe4f209f0f
import  -/  regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix fa14a969e0d89af615bc3ee63c912f06
import  -/  regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Wrap c14dca50bea9909bd11f2fae9cef1d46
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
559b7d0df7fffe20fa7988249669ed3f
  $wlvl ::
    GHC.Base.Maybe GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                   w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ww of wild {
                   GHC.Base.Nothing -> GHC.IO.failIO1 @ () Main.main11 w
                   GHC.Base.Just hout
                   -> case GHC.IO.Handle.Text.hGetContents1
                             hout
                             w of ds1 { (#,#) ipv ipv1 ->
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             ipv1
                             GHC.Types.True
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.IO.Handle.hClose1 hout ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Main.main10
                             GHC.Types.True
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      case GHC.IO.Handle.FD.openFile1
                             Main.todoFile
                             GHC.IO.IOMode.ReadMode
                             ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                      case GHC.IO.Handle.Text.hGetContents1
                             ipv9
                             ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                      Main.main9
                        Main.main8
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ [GHC.Types.Char]
                           Main.main7
                           (Data.OldList.lines ipv11))
                        ipv10 } } } } } } }) -}
6591c5a515a74ff754e3eeb5878dfc8b
  addItem :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.addItem1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
ec54f2de339671d74fd215024ba3b2a2
  addItem1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ inputItem :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Text.Regex.Posix.String.$fRegexContextRegex[][]_$cmatchOnceText
                        Main.addItem6
                        (Main.argOp inputItem) of wild {
                   GHC.Base.Nothing
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.addItem5
                        GHC.Types.True
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild1 { (,,) ds2 ma ds3 ->
                      case ma of wild2 { GHC.Arr.Array l u dt ds4 ->
                      case l of wild4 { GHC.Types.I# m ->
                      case u of wild5 { GHC.Types.I# n ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# m 0) of wild6 {
                        GHC.Types.False
                        -> case Main.addItem4 wild4 wild5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0 n) of wild7 {
                             GHC.Types.False
                             -> case Main.addItem4 wild4 wild5
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             GHC.Types.True
                             -> case GHC.Prim.indexArray#
                                       @ (GHC.Base.String,
                                          (Text.Regex.Base.RegexLike.MatchOffset,
                                           Text.Regex.Base.RegexLike.MatchLength))
                                       ds4
                                       (GHC.Prim.-# 0 m) of ds5 { (##) ipv ->
                                case ipv of wild8 { (,) x ds6 ->
                                case x of wild9 {
                                  []
                                  -> GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout
                                       Main.addItem5
                                       GHC.Types.True
                                       eta
                                  : ipv1 ipv2
                                  -> Control.Exception.Base.bracket1
                                       @ GHC.IO.Handle.Types.Handle
                                       @ ()
                                       @ ()
                                       Main.addItem3
                                         `cast`
                                       (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                                       GHC.IO.Handle.hClose1
                                         `cast`
                                       (<GHC.IO.Handle.Types.Handle>_R
                                        ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                       (\ hdl :: GHC.IO.Handle.Types.Handle[OneShot]
                                          eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                        GHC.IO.Handle.Text.hPutStr2
                                          hdl
                                          (GHC.Base.++ @ GHC.Types.Char wild9 Main.addItem2)
                                          GHC.Types.False
                                          eta1)
                                         `cast`
                                       (<GHC.IO.Handle.Types.Handle>_R
                                        ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                       eta } } } } } } } } } }) -}
7c6d346ce72b56565993088e47c86325
  addItem2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
af592503f85445ae705657139acf6a2c
  addItem3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Handle.Types.Handle #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.FD.openFile1
                   Main.todoFile
                   GHC.IO.IOMode.AppendMode) -}
ca43923af9776d4fe2655835547ab156
  addItem4 :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>b -}
1989cc8595c17acbef572bf17166803c
  addItem5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to match input pattern"#) -}
e48d950ac908f9afeda7299a48608436
  addItem6 :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.NTCo:CInt[0]))
                        (Sym (Text.Regex.Posix.Wrap.NTCo:CompOption[0])))
                   Text.Regex.Posix.Wrap.execBlank1
                     `cast`
                   (Trans
                        (Sym (Foreign.C.Types.NTCo:CInt[0]))
                        (Sym (Text.Regex.Posix.Wrap.NTCo:ExecOption[0])))
                   RegexPattern.regexPattern) -}
60042f8d6ffcff93d45e452f2d0d439c
  argOp :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ xs :: [GHC.Base.String] ->
                 case Main.argOp_go xs (GHC.Types.[] @ GHC.Types.Char) of wild {
                   [] -> GHC.List.init2 @ GHC.Types.Char
                   : x xs1 -> GHC.List.init1 @ GHC.Types.Char x xs1 }) -}
cb9a7f2db9df0af7aab64b40d385c377
  argOp_go ::
    [[GHC.Types.Char]] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c51682ba7083a3df9c25f7e0666e8f6f
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
be1da287d72bdb89f1f3fe6567033e6d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 Main.main2 ipv1 ipv }) -}
1ce8af04335c6d6c2b08a77af7559c29
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\tPRIOR.\tDESCRIPTION"#) -}
eb5605ab17378299abd9983a08389223
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Main.hs:90:3-22"#) -}
81f9958222364760ca20c1f58195dc23
  main12 :: System.Process.Internals.CmdSpec
  {- Strictness: m2,
     Unfolding: (System.Process.Internals.RawCommand
                   Main.main13
                   (GHC.Types.[] @ GHC.Base.String)) -}
5e94bed1cfc77f00ab592dde2d336969
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cal"#) -}
15b215067b7848dc5d6b6fd5129c9bbf
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
d2adabb439d58f11f1036c5426671fed
  main2 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ ds1 :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds1 of wild {
                   []
                   -> case System.Process.Internals.$wa
                             System.Process.createProcess3
                             Main.main12
                             (GHC.Base.Nothing @ GHC.IO.FilePath)
                             (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                             System.Process.Internals.Inherit
                             System.Process.Internals.CreatePipe
                             System.Process.Internals.Inherit
                             GHC.Types.False
                             GHC.Types.False
                             GHC.Types.False
                             eta of ds2 { (#,#) ipv ipv1 ->
                      case System.Process.createProcess2
                             System.Process.Internals.Inherit
                             ipv of ds3 { (#,#) ipv2 ipv3 ->
                      case System.Process.createProcess2
                             System.Process.Internals.CreatePipe
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case System.Process.createProcess2
                             System.Process.Internals.Inherit
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      Main.main6 ipv1 ipv6 } } } }
                   : option xs
                   -> case GHC.Base.eqString option Main.main5 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString option Main.main4 of wild2 {
                             GHC.Types.False
                             -> case System.Process.Internals.$wa
                                       System.Process.createProcess3
                                       Main.main12
                                       (GHC.Base.Nothing @ GHC.IO.FilePath)
                                       (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                                       System.Process.Internals.Inherit
                                       System.Process.Internals.CreatePipe
                                       System.Process.Internals.Inherit
                                       GHC.Types.False
                                       GHC.Types.False
                                       GHC.Types.False
                                       eta of ds2 { (#,#) ipv ipv1 ->
                                case System.Process.createProcess2
                                       System.Process.Internals.Inherit
                                       ipv of ds3 { (#,#) ipv2 ipv3 ->
                                case System.Process.createProcess2
                                       System.Process.Internals.CreatePipe
                                       ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                case System.Process.createProcess2
                                       System.Process.Internals.Inherit
                                       ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                Main.main6 ipv1 ipv6 } } } }
                             GHC.Types.True -> Main.main3 xs eta }
                        GHC.Types.True -> Main.addItem1 xs eta } }) -}
b11294444c255a2295e731e15d8180ca
  main3 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
08cbd61f448367aec055349022a1754e
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "remove"#) -}
7b498dc648510244f309c75fb12a8065
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "add"#) -}
5e52e838fcc112537c40d4c49d1b1032
  main6 ::
    (GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
     GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
     GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
     System.Process.Internals.ProcessHandle)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(LSLL),1*U(A,1*U,A,A)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: (GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
                         GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
                         GHC.Base.Maybe GHC.IO.Handle.Types.Handle,
                         System.Process.Internals.ProcessHandle)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { (,,,) ww1 ww2 ww3 ww4 -> Main.$wlvl ww2 w1 }) -}
19d9ae8129106bcf70074288d2f9da38
  main7 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: GHC.Base.String ->
                 case RegexPattern.$wpatternToItem x of ww { (#,,#) ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 Types.$wdisplayItem ww5 ww2 ww3 } }) -}
1d5cfdab840b22ce8492b0fb4cba7024
  main8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1) -}
5beb34f66012e1ab078c0b835cde482a
  main9 ::
    GHC.Types.Int
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><S,1*U><L,U> -}
7ad06adc869c9f1958431916b123ede5
  mainThrow :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
c957a588f6ce5b1864f2439f8c5dbcbb
  printTodo :: GHC.Types.Int -> [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U)><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main9
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <[GHC.Base.String]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
a4530bc951f71e4e22a5dd324839b6da
  printTodoList :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Main.printTodoList1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
28508ab3845c36299dbc58888416080c
  printTodoList1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Unfolding: (Main.main9 Main.main8) -}
2161f82cd1e680b72c0ddefed6963725
  readMaybe :: GHC.Read.Read a => GHC.Base.String -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLL),1*U(1*C1(C1(U)),A,A,A)><L,U>,
     Unfolding: (\ @ a $dRead :: GHC.Read.Read a s :: GHC.Base.String ->
                 case GHC.Read.readsPrec
                        @ a
                        $dRead
                        Text.ParserCombinators.ReadPrec.minPrec
                        s of wild {
                   [] -> GHC.Base.Nothing @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) val ds3 ->
                      case ds3 of wild2 {
                        []
                        -> case ds2 of wild3 {
                             [] -> GHC.Base.Just @ a val : ipv ipv1 -> GHC.Base.Nothing @ a }
                        : ipv ipv1 -> GHC.Base.Nothing @ a } } }) -}
fef91b648badad6d16a3ff23c94200b5
  readMaybe1 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ GHC.Types.Int)) -}
bfaa03a8aaca0d2e34dc1a630fae8ac9
  removeFromFile :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.removeFromFile1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d96ef2e15fe9425aeb72aafe697a7606
  removeFromFile1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ x :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.todoFile
                        GHC.IO.IOMode.ReadMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Control.Exception.Base.bracket1
                        @ GHC.IO.Handle.Types.Handle
                        @ ()
                        @ ()
                        Main.removeFromFile7
                          `cast`
                        (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                        GHC.IO.Handle.hClose1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (\ hdl :: GHC.IO.Handle.Types.Handle[OneShot]
                           eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                         GHC.IO.Handle.Text.hPutStr2
                           hdl
                           (case x of wild { GHC.Types.I# x1 ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.<=# x1 0) of wild1 {
                              GHC.Types.False
                              -> case Data.OldList.lines ipv3 of wild2 {
                                   [] -> case GHC.List.init2 ret_ty GHC.Base.String of {}
                                   : ipv4 ipv5
                                   -> case x1 of ds3 {
                                        DEFAULT
                                        -> case GHC.List.splitAt_$s$wsplitAt'
                                                  @ GHC.Base.String
                                                  (GHC.Prim.-# ds3 1)
                                                  ipv5 of ww { (#,#) ww1 ww2 ->
                                           Data.OldList.unlines
                                             (GHC.Base.++
                                                @ [GHC.Types.Char]
                                                (GHC.List.init1 @ GHC.Base.String ipv4 ww1)
                                                ww2) }
                                        1
                                        -> Data.OldList.unlines
                                             (GHC.Base.++
                                                @ [GHC.Types.Char]
                                                (GHC.List.init1
                                                   @ GHC.Base.String
                                                   ipv4
                                                   (GHC.Types.[] @ GHC.Base.String))
                                                ipv5) } }
                              GHC.Types.True
                              -> case GHC.List.init2 ret_ty GHC.Base.String of {} } })
                           GHC.Types.False
                           eta1)
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.Process.Internals.$wa
                        System.Process.createProcess3
                        Main.removeFromFile2
                        (GHC.Base.Nothing @ GHC.IO.FilePath)
                        (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                        System.Process.Internals.Inherit
                        System.Process.Internals.Inherit
                        System.Process.Internals.Inherit
                        GHC.Types.False
                        GHC.Types.False
                        GHC.Types.False
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 (# ipv12, GHC.Tuple.() #) } } } } } } }) -}
2299924847dd1cd62bcadf2c7cc5956a
  removeFromFile2 :: System.Process.Internals.CmdSpec
  {- Strictness: m2,
     Unfolding: (System.Process.Internals.RawCommand
                   Main.removeFromFile6
                   Main.removeFromFile3) -}
97f0c354757153edc0a4898781d341eb
  removeFromFile3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.removeFromFile5
                   Main.removeFromFile4) -}
4127760181b910d70b03ddcefe54842f
  removeFromFile4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.todoFile
                   (GHC.Types.[] @ GHC.Base.String)) -}
60b8f1553237a293be8e645b68c6fe1e
  removeFromFile5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Todo.txt.new"#) -}
1d70b4158be94f124cf7bf82909b1a8b
  removeFromFile6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "mv"#) -}
393289562281d198de60a6c434c94757
  removeFromFile7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Handle.Types.Handle #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.FD.openFile1
                   Main.removeFromFile8
                   GHC.IO.IOMode.WriteMode) -}
08d9f77091bdfaf724c3733cd12332d9
  removeFromFile8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Main.todoFile
                   Main.removeFromFile9) -}
7b20b9922c39e13ea52db089ed163998
  removeFromFile9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ".new"#) -}
ed12bc71a4db58dfd11c85eac56f4445
  removeItem :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main3
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d5e5a3386960ac8f15febad86307af0c
  todoFile :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/frank/bin_storage/Todo.txt"#) -}
7ab2417079539d7fbcb71bcc1fef15ce
  viewTodoList :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.viewTodoList1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
a3cdee9c6e3ba129712893d0b3416dbc
  viewTodoList1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds1 :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Main.viewTodoList2 eta) -}
2b5a7365c4ebdb25f626b8288e616a0f
  viewTodoList2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Process.Internals.$wa
                        System.Process.createProcess3
                        Main.main12
                        (GHC.Base.Nothing @ GHC.IO.FilePath)
                        (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                        System.Process.Internals.Inherit
                        System.Process.Internals.CreatePipe
                        System.Process.Internals.Inherit
                        GHC.Types.False
                        GHC.Types.False
                        GHC.Types.False
                        s of ds1 { (#,#) ipv ipv1 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.Process.createProcess2
                        System.Process.Internals.CreatePipe
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.Process.createProcess2
                        System.Process.Internals.Inherit
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 Main.main6 ipv1 ipv6 } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

